syntax = "proto3";

package ru.zveron.contract.order.external;

import "model/order_model.proto";

option swift_prefix = "";
option java_package = "ru.zveron.contract.order.external";
option java_outer_classname = "OrderServiceExternalProto";
option java_multiple_files = true;

service OrderServiceExternal {
  //gets order by id
  rpc GetOrder(GetOrderRequest)
      returns (GetOrderResponse);
}


message GetOrderRequest{
  int64 id = 1;
}

message GetOrderResponse {
  FullOrder order = 1;
}

//dto describing order when in full order info screen
message FullOrder {
  int64 id = 1;
  Profile profile = 2;
  model.Animal animal = 3;
  string title = 4;
  string price = 5;
  model.Address address = 6;
  //date of order delivery formatted as dd.MM.yyyy - dd.MM.yyyy
  string service_date = 7;
  //time of order delivery formatted as HH:mm (- HH:mm)
  optional string service_time = 8;
  string description = 9;
  string created_at = 10;
  bool can_accept = 11;

  repeated SimilarOrder similar_orders = 12;
}

message Profile {
  int64 id = 1;
  string name = 2;
  string image_url = 3;
  //rating values like 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5
  float rating = 4;
}

message SimilarOrder {
  int64 id = 1;
  model.Animal animal = 2;
  string title = 3;
  string price = 4;
  optional model.Address address = 5;
  string service_date = 6;
  string date_created = 7;
}

enum ServiceDeliveryMethod {
  IN_PERSON = 0;
  REMOTE = 1;
}
