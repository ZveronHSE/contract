syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "model/communication.proto";

package ru.zveron.contract.profile;

option swift_prefix="";
option java_package = "ru.zveron.contract.profile";
option java_outer_classname = "ProfileGrpcExternal";
option java_multiple_files = true;

service ProfileServiceExternal {

  // Получение профиля, как страницы в маркетплейсе (агрегируем данные из разных источников)
  rpc GetProfilePage(GetProfilePageRequest) returns(GetProfilePageResponse);

  // Получение профиля, как страницы в маркетплейсе, для его владельца
  rpc GetProfileInfo(GetProfileInfoRequest) returns(GetProfileInfoResponse);

  // Редактирование профиля, как страницы в маркетплейсе, владельцем
  rpc SetProfileInfo(SetProfileInfoRequest) returns(google.protobuf.Empty);

  // Получение настроек профиля
  rpc GetSettings(GetSettingsRequest) returns(GetSettingsResponse);

  // Изменение настроект профиля
  rpc SetSettings(SetSettingsRequest) returns(google.protobuf.Empty);

  // Получение предпочительных способов связи (для создания объявлений)
  rpc GetChannelTypes(GetChannelTypesRequest) returns(GetChannelTypesResponse);

  // Получение способов связи, привязанных к профилю. Доступно для владельца профиля
  rpc GetLinks(GetLinksRequest) returns(model.Links);

  // Полное удаление профиля без возможности восстановления
  rpc DeleteProfile(DeleteProfileRequest) returns(google.protobuf.Empty);
}

message GetProfilePageRequest {
  uint64 requested_profile_id = 1;
  optional uint64 authorized_profile_id = 2;
}

message GetProfileInfoRequest {
  uint64 id = 1;
}

message SetProfileInfoRequest {
  uint64 id = 1;
  optional string name = 2;
  optional string surname = 3;
  optional uint64 image_id = 4;
  optional Address address = 5;
}

message GetSettingsRequest {
  uint64 id = 1;
}

message SetSettingsRequest {
  uint64 id = 1;
  // Optional too
  repeated model.ChannelType channels = 2;
  optional Address address = 3;
}

message GetChannelTypesRequest {
  uint64 id = 1;
}

message GetLinksRequest {
  uint64 id = 1;
}

message DeleteProfileRequest {
  uint64 id = 1;
}

message GetProfileInfoResponse {
  uint64 id = 1;
  string name = 2;
  string surname = 3;
  uint64 image_id = 4;
  double rating = 5;
  Address address = 6;
}

message GetProfilePageResponse {
  uint64 id = 1;
  string name = 2;
  string surname = 3;
  uint64 image_id = 4;
  Contacts contacts = 5;
  double rating = 6;
  int32 review_number = 7;
  string address = 8;
  repeated LotSummary active_lots = 9;
  repeated LotSummary closed_lots = 10;
  google.protobuf.Timestamp last_activity = 11;
}

message LotSummary {
  uint64 id = 1;
  string title = 2;
  string price_formatted = 3;
  string publication_date_formatted = 4;
  LotStatus status = 5;
  uint64 first_image = 6;
  bool is_favorite = 7;
}

enum LotStatus {
  ACTIVE = 0;
  CLOSED = 1;
}

message GetChannelTypesResponse {
  repeated model.ChannelType channels = 1;
}

message Address {
  string region = 1;
  string town = 2;
  double longitude = 3;
  double latitude = 4;
}

message GetSettingsResponse {
  repeated model.ChannelType channels = 2;
  Address address = 3;
}

message Contacts {
  repeated model.ChannelType channels = 1;
  model.Links links = 2;
}