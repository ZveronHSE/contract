//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: profile_favorites.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Ru_Zveron_ProfileFavoritesServiceClient`, then call methods of this protocol to make API calls.
public protocol Ru_Zveron_ProfileFavoritesServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? { get }

  func addToFavorites(
    _ request: Ru_Zveron_AddProfileToFavoritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ru_Zveron_AddProfileToFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func removeFromFavorites(
    _ request: Ru_Zveron_RemoveProfileFromFavoritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ru_Zveron_RemoveProfileFromFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func existsInFavorites(
    _ request: Ru_Zveron_ProfileExistsInFavoritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ru_Zveron_ProfileExistsInFavoritesRequest, Ru_Zveron_ProfileExistsInFavoritesResponse>

  func getFavoriteProfiles(
    _ request: Ru_Zveron_GetFavoriteProfilesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ru_Zveron_GetFavoriteProfilesRequest, Ru_Zveron_GetFavoriteProfilesResponse>

  func removeAllByOwner(
    _ request: Ru_Zveron_RemoveAllProfilesByOwnerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ru_Zveron_RemoveAllProfilesByOwnerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func removeAllByFavoriteProfile(
    _ request: Ru_Zveron_RemoveAllByFavoriteProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Ru_Zveron_RemoveAllByFavoriteProfileRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

extension Ru_Zveron_ProfileFavoritesServiceClientProtocol {
  public var serviceName: String {
    return "ru.zveron.ProfileFavoritesService"
  }

  /// Добавление профиля в избранное пользователя
  ///
  /// - Parameters:
  ///   - request: Request to send to addToFavorites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func addToFavorites(
    _ request: Ru_Zveron_AddProfileToFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ru_Zveron_AddProfileToFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.addToFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeaddToFavoritesInterceptors() ?? []
    )
  }

  /// Удаление профиля из избранного пользователя
  ///
  /// - Parameters:
  ///   - request: Request to send to removeFromFavorites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeFromFavorites(
    _ request: Ru_Zveron_RemoveProfileFromFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ru_Zveron_RemoveProfileFromFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeFromFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveFromFavoritesInterceptors() ?? []
    )
  }

  /// Проверка на существование профиля в избранном пользователя
  ///
  /// - Parameters:
  ///   - request: Request to send to existsInFavorites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func existsInFavorites(
    _ request: Ru_Zveron_ProfileExistsInFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ru_Zveron_ProfileExistsInFavoritesRequest, Ru_Zveron_ProfileExistsInFavoritesResponse> {
    return self.makeUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.existsInFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeexistsInFavoritesInterceptors() ?? []
    )
  }

  /// Получение списка избранных профилей пользователя
  ///
  /// - Parameters:
  ///   - request: Request to send to getFavoriteProfiles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFavoriteProfiles(
    _ request: Ru_Zveron_GetFavoriteProfilesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ru_Zveron_GetFavoriteProfilesRequest, Ru_Zveron_GetFavoriteProfilesResponse> {
    return self.makeUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.getFavoriteProfiles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetFavoriteProfilesInterceptors() ?? []
    )
  }

  /// Удаление всех записей из избранного определенного пользователя
  ///
  /// - Parameters:
  ///   - request: Request to send to removeAllByOwner.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeAllByOwner(
    _ request: Ru_Zveron_RemoveAllProfilesByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ru_Zveron_RemoveAllProfilesByOwnerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveAllByOwnerInterceptors() ?? []
    )
  }

  /// Удаление опредленного пользователя из всех список избранного
  ///
  /// - Parameters:
  ///   - request: Request to send to removeAllByFavoriteProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeAllByFavoriteProfile(
    _ request: Ru_Zveron_RemoveAllByFavoriteProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Ru_Zveron_RemoveAllByFavoriteProfileRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByFavoriteProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveAllByFavoriteProfileInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Ru_Zveron_ProfileFavoritesServiceClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Ru_Zveron_ProfileFavoritesServiceNIOClient")
public final class Ru_Zveron_ProfileFavoritesServiceClient: Ru_Zveron_ProfileFavoritesServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the ru.zveron.ProfileFavoritesService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Ru_Zveron_ProfileFavoritesServiceNIOClient: Ru_Zveron_ProfileFavoritesServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the ru.zveron.ProfileFavoritesService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Ru_Zveron_ProfileFavoritesServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? { get }

  func makeAddToFavoritesCall(
    _ request: Ru_Zveron_AddProfileToFavoritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_AddProfileToFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeRemoveFromFavoritesCall(
    _ request: Ru_Zveron_RemoveProfileFromFavoritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_RemoveProfileFromFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeExistsInFavoritesCall(
    _ request: Ru_Zveron_ProfileExistsInFavoritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_ProfileExistsInFavoritesRequest, Ru_Zveron_ProfileExistsInFavoritesResponse>

  func makeGetFavoriteProfilesCall(
    _ request: Ru_Zveron_GetFavoriteProfilesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_GetFavoriteProfilesRequest, Ru_Zveron_GetFavoriteProfilesResponse>

  func makeRemoveAllByOwnerCall(
    _ request: Ru_Zveron_RemoveAllProfilesByOwnerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_RemoveAllProfilesByOwnerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeRemoveAllByFavoriteProfileCall(
    _ request: Ru_Zveron_RemoveAllByFavoriteProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_RemoveAllByFavoriteProfileRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ru_Zveron_ProfileFavoritesServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Ru_Zveron_ProfileFavoritesServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeAddToFavoritesCall(
    _ request: Ru_Zveron_AddProfileToFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_AddProfileToFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.addToFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeaddToFavoritesInterceptors() ?? []
    )
  }

  public func makeRemoveFromFavoritesCall(
    _ request: Ru_Zveron_RemoveProfileFromFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_RemoveProfileFromFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeFromFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveFromFavoritesInterceptors() ?? []
    )
  }

  public func makeExistsInFavoritesCall(
    _ request: Ru_Zveron_ProfileExistsInFavoritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_ProfileExistsInFavoritesRequest, Ru_Zveron_ProfileExistsInFavoritesResponse> {
    return self.makeAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.existsInFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeexistsInFavoritesInterceptors() ?? []
    )
  }

  public func makeGetFavoriteProfilesCall(
    _ request: Ru_Zveron_GetFavoriteProfilesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_GetFavoriteProfilesRequest, Ru_Zveron_GetFavoriteProfilesResponse> {
    return self.makeAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.getFavoriteProfiles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetFavoriteProfilesInterceptors() ?? []
    )
  }

  public func makeRemoveAllByOwnerCall(
    _ request: Ru_Zveron_RemoveAllProfilesByOwnerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_RemoveAllProfilesByOwnerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveAllByOwnerInterceptors() ?? []
    )
  }

  public func makeRemoveAllByFavoriteProfileCall(
    _ request: Ru_Zveron_RemoveAllByFavoriteProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Ru_Zveron_RemoveAllByFavoriteProfileRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByFavoriteProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveAllByFavoriteProfileInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Ru_Zveron_ProfileFavoritesServiceAsyncClientProtocol {
  public func addToFavorites(
    _ request: Ru_Zveron_AddProfileToFavoritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.addToFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeaddToFavoritesInterceptors() ?? []
    )
  }

  public func removeFromFavorites(
    _ request: Ru_Zveron_RemoveProfileFromFavoritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeFromFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveFromFavoritesInterceptors() ?? []
    )
  }

  public func existsInFavorites(
    _ request: Ru_Zveron_ProfileExistsInFavoritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ru_Zveron_ProfileExistsInFavoritesResponse {
    return try await self.performAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.existsInFavorites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeexistsInFavoritesInterceptors() ?? []
    )
  }

  public func getFavoriteProfiles(
    _ request: Ru_Zveron_GetFavoriteProfilesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Ru_Zveron_GetFavoriteProfilesResponse {
    return try await self.performAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.getFavoriteProfiles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makegetFavoriteProfilesInterceptors() ?? []
    )
  }

  public func removeAllByOwner(
    _ request: Ru_Zveron_RemoveAllProfilesByOwnerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByOwner.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveAllByOwnerInterceptors() ?? []
    )
  }

  public func removeAllByFavoriteProfile(
    _ request: Ru_Zveron_RemoveAllByFavoriteProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByFavoriteProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeremoveAllByFavoriteProfileInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Ru_Zveron_ProfileFavoritesServiceAsyncClient: Ru_Zveron_ProfileFavoritesServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

public protocol Ru_Zveron_ProfileFavoritesServiceClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'addToFavorites'.
  func makeaddToFavoritesInterceptors() -> [ClientInterceptor<Ru_Zveron_AddProfileToFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'removeFromFavorites'.
  func makeremoveFromFavoritesInterceptors() -> [ClientInterceptor<Ru_Zveron_RemoveProfileFromFavoritesRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'existsInFavorites'.
  func makeexistsInFavoritesInterceptors() -> [ClientInterceptor<Ru_Zveron_ProfileExistsInFavoritesRequest, Ru_Zveron_ProfileExistsInFavoritesResponse>]

  /// - Returns: Interceptors to use when invoking 'getFavoriteProfiles'.
  func makegetFavoriteProfilesInterceptors() -> [ClientInterceptor<Ru_Zveron_GetFavoriteProfilesRequest, Ru_Zveron_GetFavoriteProfilesResponse>]

  /// - Returns: Interceptors to use when invoking 'removeAllByOwner'.
  func makeremoveAllByOwnerInterceptors() -> [ClientInterceptor<Ru_Zveron_RemoveAllProfilesByOwnerRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'removeAllByFavoriteProfile'.
  func makeremoveAllByFavoriteProfileInterceptors() -> [ClientInterceptor<Ru_Zveron_RemoveAllByFavoriteProfileRequest, SwiftProtobuf.Google_Protobuf_Empty>]
}

public enum Ru_Zveron_ProfileFavoritesServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "ProfileFavoritesService",
    fullName: "ru.zveron.ProfileFavoritesService",
    methods: [
      Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.addToFavorites,
      Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeFromFavorites,
      Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.existsInFavorites,
      Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.getFavoriteProfiles,
      Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByOwner,
      Ru_Zveron_ProfileFavoritesServiceClientMetadata.Methods.removeAllByFavoriteProfile,
    ]
  )

  public enum Methods {
    public static let addToFavorites = GRPCMethodDescriptor(
      name: "addToFavorites",
      path: "/ru.zveron.ProfileFavoritesService/addToFavorites",
      type: GRPCCallType.unary
    )

    public static let removeFromFavorites = GRPCMethodDescriptor(
      name: "removeFromFavorites",
      path: "/ru.zveron.ProfileFavoritesService/removeFromFavorites",
      type: GRPCCallType.unary
    )

    public static let existsInFavorites = GRPCMethodDescriptor(
      name: "existsInFavorites",
      path: "/ru.zveron.ProfileFavoritesService/existsInFavorites",
      type: GRPCCallType.unary
    )

    public static let getFavoriteProfiles = GRPCMethodDescriptor(
      name: "getFavoriteProfiles",
      path: "/ru.zveron.ProfileFavoritesService/getFavoriteProfiles",
      type: GRPCCallType.unary
    )

    public static let removeAllByOwner = GRPCMethodDescriptor(
      name: "removeAllByOwner",
      path: "/ru.zveron.ProfileFavoritesService/removeAllByOwner",
      type: GRPCCallType.unary
    )

    public static let removeAllByFavoriteProfile = GRPCMethodDescriptor(
      name: "removeAllByFavoriteProfile",
      path: "/ru.zveron.ProfileFavoritesService/removeAllByFavoriteProfile",
      type: GRPCCallType.unary
    )
  }
}

