syntax = "proto3";
import "google/protobuf/empty.proto";
package ru.zveron;

option java_package = "ru.zveron.favorites.profile";
option java_outer_classname = "ProfileFavoritesGrpc";
option java_multiple_files = true;

service ProfileFavoritesService {
  // Добавление профиля в избранное пользователя
  rpc addToFavorites(AddProfileToFavoritesRequest) returns(google.protobuf.Empty);

  // Удаление профиля из избранного пользователя
  rpc removeFromFavorites(RemoveProfileFromFavoritesRequest) returns(google.protobuf.Empty);

  // Проверка на существование профиля в избранном пользователя
  rpc existsInFavorites(ProfileExistsInFavoritesRequest) returns(ProfileExistsInFavoritesResponse);

  // Получение списка избранных профилей пользователя
  rpc getFavoriteProfiles(GetFavoriteProfilesRequest) returns(GetFavoriteProfilesResponse);

  // Удаление всех записей из избранного определенного пользователя
  rpc removeAllByOwner(RemoveAllProfilesByOwnerRequest) returns(google.protobuf.Empty);

  // Удаление опредленного пользователя из всех список избранного
  rpc removeAllByFavoriteProfile(RemoveAllByFavoriteProfileRequest) returns(google.protobuf.Empty);
}

message AddProfileToFavoritesRequest {
  // Id владельца списка избранного
  int64 favorites_owner_id = 1;
  // Добавляемый в избранное профиль
  int64 favorite_profile_id = 2;
}

message RemoveProfileFromFavoritesRequest {
  // Id владельца списка избранного
  int64 favorites_owner_id = 1;
  // Удаляемый из избранного профиль
  int64 favorite_profile_id = 2;
}

message ProfileExistsInFavoritesRequest {
  // Id владельца списка избранного
  int64 favorites_owner_id = 1;
  // Профиль, наличие которого проверяется в избранном
  int64 favorite_profile_id = 2;
}

message ProfileExistsInFavoritesResponse {
  // Содержится ли профиль в избранном
  bool is_exists = 1;
}

message GetFavoriteProfilesRequest {
  // Id владельца списка избранного
  int64 id = 1;
}

message GetFavoriteProfilesResponse {
  // Список добавленных в избранное профилей
  repeated FavoriteProfile favorite_profiles = 1;
}

message FavoriteProfile {
  // Идентификатор профиля
  int64 id = 1;
}

message RemoveAllProfilesByOwnerRequest {
  // Идентификатор профиля
  int64 id = 1;
}

message RemoveAllByFavoriteProfileRequest {
  // Идентификатор профиля
  int64 id = 1;
}