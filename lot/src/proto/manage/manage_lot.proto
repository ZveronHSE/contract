syntax = "proto3";

package ru.zveron.contract.lot.manage;

import "model_lot.proto";

option java_package = "ru.zveron.contract.lot.manage";
option java_outer_classname = "ManageLotProto";
option java_multiple_files = true;

// Path /api/lot/create, ответ будет в виде CardLot
message CreateLotRequest {
  string title = 1;
  repeated Photo photos = 2;
  // Заданные параметры объявления
  repeated Parameter parameters = 3;
  string description = 4;
  string price = 5;
  CommunicationChannel communication_channel = 6;
  // Это может отсутствовать, если гендера нет для объявления, например, для товаров.
  optional Gender gender = 7;
  FullAddress address = 8;
  int32 lot_form_id = 9;
  int32 category_id = 10;
}

// Path /api/lot/edit, ответ будет в виде CardLot
message EditLotRequest {
  // ID объявления
  int64 id = 1;
  string title = 2;
  repeated Photo photos = 3;
  // Заданные параметры объявления
  repeated Parameter parameters = 4;
  string description = 5;
  string price = 6;
  CommunicationChannel communication_channel = 7;
}

// Path /api/lot/close, ответ будет пустым
message CloseLotRequest {
  // ID объявления
  int64 id = 1;
  ClosingLotReason closing_lot_reason = 2;
  // Идентификатор покупателя, если объявление было продано на этом сайте
  optional int64 customer_id = 3;
}

enum ClosingLotReason {
  // Продал на этом сайте
  SOLD = 0;
  // Продал в другом месте
  SOLD_EXTERNAL = 1;
  // Продажа неактуальна
  IRRELEVANT = 2;
}

message FullAddress {
  optional string region = 1;
  optional string district = 2;
  optional string town = 3;
  optional string street = 4;
  optional string house = 5;
  double longitude = 6;
  double latitude = 7;
}