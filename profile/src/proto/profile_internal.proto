syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "model/communication.proto";
package ru.zveron;

option java_package = "ru.zveron";
option java_outer_classname = "ProfileGrpcInternal";
option java_multiple_files = true;

service ProfileService {

  // Создание профиля пользователя
  rpc CreateProfile(CreateProfileRequest) returns(google.protobuf.Empty);

  // Получение профиля, как сущности, описывающей личные данные,
  rpc GetProfile(GetProfileRequest) returns(GetProfileResponse);

  // Получение профиля, как сущности, описывающей личные данные + контактная информация (для сервиса объявлений)
  rpc GetProfileWithContacts(GetProfileWithContactsRequest) returns(GetProfileWithContactsResponse);

  // Обновление способов связи. Метод вызывается когда пользователь добавляет новый способ связи
  // Или удаляет уже существующий.
  rpc UpdateContacts(UpdateContactsRequest) returns(google.protobuf.Empty);
}

message CreateProfileRequest {
  int64 auth_account_id = 1;
  string name = 2;
  string surname = 3;
  Links links = 4;
  int64 image_id = 5;
}

message GetProfileRequest {
  int64 id = 1;
}

message GetProfileResponse {
  int64 id = 1;
  string name = 2;
  string surname = 3;
  int64 image_id = 4;
  repeated ChannelType channels = 5;
  int64 address_id = 6;
}

message GetProfileWithContactsRequest {
  int64 id = 1;
}

message GetProfileWithContactsResponse {
  int64 id = 1;
  string name = 2;
  string surname = 3;
  int64 image_id = 4;
  repeated ChannelType channels = 5;
  Links links = 6;
  int64 address_id = 7;
}

// Т.к. за раз изменение происходи только в одном поле,
// В ways_of_communication необходимо указать, в каком поле произошло изменение (значение true)
// Сервис перезапишет информацию, указанную в links_to_contacts, только для отмеченного способа связи
message UpdateContactsRequest {
  int64 profile_id = 1;
  ChannelType type = 2;
  Links links = 3;
}